package br.com.fiap.jdbc.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import br.com.fiap.jdbc.model.ItemPedido;
import br.com.fiap.jdbc.model.Pedido;
import br.com.fiap.jdbc.uteis.ConnectionFactory;

public class ItemPedidoDAO {
	private Connection connection;

	// Construtor para obter a conexão
	public ItemPedidoDAO() {
		this.connection = ConnectionFactory.getConnection();
	}

	// Método para salvar um item do pedido
	public void salvar(ItemPedido item, int idPedido) {
		String sql = "INSERT INTO ItemPedido (nomeItem, quantidade, precoItem, descricao, idPedido) VALUES (?, ?, ?, ?, ?)";

		try (PreparedStatement stmt = connection.prepareStatement(sql)) {
			stmt.setString(1, item.getNomeItem());
			stmt.setInt(2, item.getQuantidade());
			stmt.setDouble(3, item.getPrecoItem());
			stmt.setString(4, item.getDescricao());
			stmt.setInt(5, idPedido); // Relaciona o item ao pedido
			stmt.executeUpdate();
		} catch (SQLException e) {
			System.err.println("Erro ao salvar item do pedido: " + e.getMessage());
		}
	}

	// Método para listar todos os itens de um pedido específico
	public List<ItemPedido> listar(int idPedido) {
		List<ItemPedido> itens = new ArrayList<>();
		String sql = "SELECT * FROM ItemPedido WHERE idPedido = ?";

		try (PreparedStatement stmt = connection.prepareStatement(sql)) {
			stmt.setInt(1, idPedido);

			try (ResultSet rs = stmt.executeQuery()) {
				while (rs.next()) {
					ItemPedido item = new ItemPedido();
					item.setIdItemPedido(rs.getInt("idItemPedido"));
					item.setNomeItem(rs.getString("nomeItem"));
					item.setQuantidade(rs.getInt("quantidade"));
					item.setPrecoItem(rs.getDouble("precoItem"));
					item.setDescricao(rs.getString("descricao"));
					itens.add(item);
				}
			}
		} catch (SQLException e) {
			System.err.println("Erro ao listar itens do pedido: " + e.getMessage());
		}
		return itens; // retorna a lista de itens
	}
}
